# Copyright 2025 SECO Mind Srl
#
# SPDX-License-Identifier: Apache-2.0

---
HeaderFilterRegex: '.*'
Checks: >
  -abseil-*,
  -altera-*,
  -android-*,
  -boost-*,
  bugprone-*,
  cert-*,
  clang-analyzer-*,
  concurrency-*,
  cppcoreguidelines-*,
  -darwin-*,
  -fuchsia-*,
  google-*,
  -hicpp-*,
  -linuxkernel-*,
  -llvm-*,
  -llvmlibc-*,
  misc-*,
  modernize-*,
  -mpi-*,
  -objc-*,
  -openmp-*,
  performance-*,
  portability-*,
  readability-*,
  -zircon-*,
  -bugprone-easily-swappable-parameters,
  -cppcoreguidelines-owning-memory

# TODO:
# - Resolve the warnings generated by the following rules.
#   1. bugprone-easily-swappable-parameters
#   2. cppcoreguidelines-owning-memory

CheckOptions:
  - { key: bugprone-misplaced-widening-cast.CheckImplicitCasts, value: true }
  - { key: bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression, value: true }
  - { key: bugprone-suspicious-string-compare.WarnOnLogicalNotComparison, value: true }
  - { key: readability-const-return-type.IgnoreMacros, value: false }

  - { key: readability-function-cognitive-complexity.Threshold, value: 25 }
  - { key: readability-function-cognitive-complexity.DescribeBasicIncrements, value: false }
  - { key: readability-function-cognitive-complexity.IgnoreMacros, value: false }

  - { key: readability-function-size.LineThreshold, value: 60 }
  - { key: readability-function-size.StatementThreshold, value: 30 }
  - { key: readability-function-size.BranchThreshold, value: 5 }
  - { key: readability-function-size.ParameterThreshold, value: 5 }
  - { key: readability-function-size.NestingThreshold, value: none }
  - { key: readability-function-size.VariableThreshold, value: none }

  - { key: readability-identifier-length.MinimumVariableNameLength, value: 3 }
  - { key: readability-identifier-length.IgnoredVariableNames, value: "" }
  - { key: readability-identifier-length.MinimumParameterNameLength, value: 3 }
  - { key: readability-identifier-length.IgnoredParameterNames, value: "" }
  - { key: readability-identifier-length.MinimumLoopCounterNameLength, value: 3 }
  - { key: readability-identifier-length.IgnoredLoopCounterNames, value: "^[ijk_]$" }

#   - { key: readability-identifier-naming.ConstantCase, value: lower_case }
#   - { key: readability-identifier-naming.ConstantParameterCase, value: lower_case }
#   - { key: readability-identifier-naming.ConstantPointerParameterCase, value: lower_case }
#   - { key: readability-identifier-naming.EnumCase, value: lower_case }
#   - { key: readability-identifier-naming.EnumConstantCase, value: UPPER_CASE }
#   - { key: readability-identifier-naming.FunctionCase, value: lower_case }
#   - { key: readability-identifier-naming.GlobalConstantCase, value: lower_case }
#   - { key: readability-identifier-naming.GlobalConstantPointerCase, value: lower_case }
#   - { key: readability-identifier-naming.GlobalFunctionCase, value: lower_case }
#   - { key: readability-identifier-naming.GlobalPointerCase, value: lower_case }
#   - { key: readability-identifier-naming.GlobalVariableCase, value: lower_case }
#   - { key: readability-identifier-naming.LocalConstantCase, value: lower_case }
#   - { key: readability-identifier-naming.LocalConstantPointerCase, value: lower_case }
#   - { key: readability-identifier-naming.LocalPointerCase, value: lower_case }
#   - { key: readability-identifier-naming.LocalVariableCase, value: lower_case }
#   - { key: readability-identifier-naming.MacroDefinitionCase, value: UPPER_CASE }
#   - { key: readability-identifier-naming.ParameterCase, value: lower_case }
#   - { key: readability-identifier-naming.PointerParameterCase, value: lower_case }
#   - { key: readability-identifier-naming.ScopedEnumConstantCase, value: lower_case }
#   - { key: readability-identifier-naming.StaticConstantCase, value: lower_case }
#   - { key: readability-identifier-naming.StaticVariableCase, value: lower_case }
#   - { key: readability-identifier-naming.StructCase, value: lower_case }
#   - { key: readability-identifier-naming.TypedefCase, value: lower_case }
#   - { key: readability-identifier-naming.TypedefSuffix, value: "_t" }
#   - { key: readability-identifier-naming.UnionCase, value: lower_case }
#   - { key: readability-identifier-naming.VariableCase, value: lower_case }

  - { key: readability-simplify-boolean-expr.ChainedConditionalReturn, value: true }
  - { key: readability-simplify-boolean-expr.ChainedConditionalAssignment, value: true }
  - { key: readability-simplify-boolean-expr.SimplifyDeMorgan, value: true }
  - { key: readability-simplify-boolean-expr.SimplifyDeMorganRelaxed, value: true }
  - { key: readability-uppercase-literal-suffix.IgnoreMacros, value: false }
