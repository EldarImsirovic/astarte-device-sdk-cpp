# (C) Copyright 2025, SECO Mind Srl
#
# SPDX-License-Identifier: Apache-2.0

name: Check build for the library

on:
  pull_request:
  push:
defaults:
  run:
    shell: bash
env:
  GRPC_VERSION: "1.69.0"

jobs:
  build-simple-sample-conan:
    runs-on: ubuntu-latest
    concurrency:
      group: build-simple-sample-conan-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v5
      - name: Install Conan
        uses: conan-io/setup-conan@v1
        with:
          cache_packages: true
          use_venv: true
      - name: Build sample with conan
        run: ./build_sample_conan.sh simple --ext-tools
  build-simple-sample-fetch-grpc:
    runs-on: ubuntu-latest
    concurrency:
      group: build-simple-sample-fetch-grpc-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v5
      - name: Build library for C++ 20
        run: ./build_sample.sh simple
  build-simple-sample-install-grpc:
    runs-on: ubuntu-latest
    concurrency:
      group: build-simple-sample-install-grpc-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v5
        with:
          path: astarte-device-sdk-cpp
      - name: Setup gRPC build cache
        id: cache-grpc-cpp
        uses: actions/cache@v4
        with:
          path: |
            ./grpc
            ./grpc-install
          # Cache the hash of the build script for the CMAKE flags
          key: grpc-cpp-v${{ env.GRPC_VERSION }}-${{ hashFiles('astarte-device-sdk-cpp/.github/scripts/build-grpc.sh') }}
      - name: Setup gRPC for build
        run: |
          ./astarte-device-sdk-cpp/.github/scripts/setup-grpc.sh "$GRPC_VERSION"
      - name: Compile gRPC from source
        run: |
          ./astarte-device-sdk-cpp/.github/scripts/build-grpc.sh
      - name: Build example for C++ 20
        working-directory: ./astarte-device-sdk-cpp
        run: ./build_sample.sh simple --fresh --system_grpc
  build-qt-sample-conan:
    runs-on: ubuntu-latest
    concurrency:
      group: build-qt-sample-conan-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v5
      - name: Install Conan
        uses: conan-io/setup-conan@v1
        with:
          cache_packages: true
          use_venv: true
      - name: Install system dependencies
        run: sudo apt update && sudo apt install -y libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev libxdamage-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxtst-dev libxcb-glx0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev libxcb-util-dev
      - name: Build sample with conan
        run: ./build_sample_conan.sh qt --ext-tools
